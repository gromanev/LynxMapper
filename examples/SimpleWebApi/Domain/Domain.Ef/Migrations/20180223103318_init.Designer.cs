// <auto-generated />
using Domain.Ef;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace Domain.Ef.Migrations
{
    [DbContext(typeof(MyAppContext))]
    [Migration("20180223103318_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("Domain.Data.DataModels.Locations", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("LocationName")
                        .HasColumnName("location");

                    b.HasKey("Id");

                    b.ToTable("locations");
                });

            modelBuilder.Entity("Domain.Data.DataModels.Passangers", b =>
                {
                    b.Property<int>("TripId")
                        .HasColumnName("trip_id");

                    b.Property<int>("PassangerId")
                        .HasColumnName("passanger_id");

                    b.HasKey("TripId", "PassangerId");

                    b.HasIndex("PassangerId");

                    b.ToTable("passangers");
                });

            modelBuilder.Entity("Domain.Data.DataModels.Routes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<int>("DestinationLocationId")
                        .HasColumnName("destination_location_id");

                    b.Property<int>("StartLocationId")
                        .HasColumnName("start_location_id");

                    b.HasKey("Id");

                    b.HasIndex("DestinationLocationId");

                    b.HasIndex("StartLocationId");

                    b.ToTable("routes");
                });

            modelBuilder.Entity("Domain.Data.DataModels.Trips", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<int>("DriverId")
                        .HasColumnName("driver_id");

                    b.Property<int>("RouteId")
                        .HasColumnName("route_id");

                    b.Property<DateTime>("StartTime")
                        .HasColumnName("start_time");

                    b.HasKey("Id");

                    b.HasIndex("DriverId");

                    b.HasIndex("RouteId");

                    b.ToTable("trips");
                });

            modelBuilder.Entity("Domain.Data.DataModels.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("FirstName")
                        .HasColumnName("first_name");

                    b.Property<bool?>("IsDriver")
                        .HasColumnName("is_driver");

                    b.Property<string>("LastName")
                        .HasColumnName("last_name");

                    b.Property<string>("Patronimic")
                        .HasColumnName("patronimic");

                    b.Property<DateTime>("YearOfBirth")
                        .HasColumnName("year_of_birth");

                    b.HasKey("Id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("Domain.Data.DataModels.Passangers", b =>
                {
                    b.HasOne("Domain.Data.DataModels.Trips", "Trip")
                        .WithMany("Passangers")
                        .HasForeignKey("PassangerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Domain.Data.DataModels.Users", "Passanger")
                        .WithMany("Passangers")
                        .HasForeignKey("PassangerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Domain.Data.DataModels.Routes", b =>
                {
                    b.HasOne("Domain.Data.DataModels.Locations", "DestinationLocation")
                        .WithMany("DestRoutes")
                        .HasForeignKey("DestinationLocationId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Domain.Data.DataModels.Locations", "StartLocation")
                        .WithMany("StartRoutes")
                        .HasForeignKey("StartLocationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Domain.Data.DataModels.Trips", b =>
                {
                    b.HasOne("Domain.Data.DataModels.Users", "Driver")
                        .WithMany("DriverTrips")
                        .HasForeignKey("DriverId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Domain.Data.DataModels.Routes", "Route")
                        .WithMany()
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
